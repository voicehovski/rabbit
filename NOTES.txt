		Для метода
		
	@HOW_TO_USE: 
	
	@ACTIONS:
	* 
	
	@RETURN: 
	
	@PROBLEMS:
	* 

	
		Для класса
	
	@ANNOTATION: 
	
	@HOW_TO_USE:
	* 
	
	@PROBLEMS:
	* 

	
		Формирование запроса-get с параметром массивом

	Прочесть потом можно приблизительно так:
		//См. https://api.joomla.org/cms-3/classes/JInput.html#method_get
		$jinput = JFactory::getApplication()->input;
		$table_filename = $jinput->get('table_filename', '', 'string');
		$images = $jinput->get('images', null, null);
		
		
		Использование вспомогательных классов

	Размещаем файл с кодом класса в директории helpers. Без закрывающего тега ?>
		
	Чтобы создать экземпляр, например в модели или виде, выполняем следующее (подставляем соответствующие имя класса и путь к файлу):
	if ( !class_exists ( 'csvHelper' ) ) require ( JPATH_COMPONENT_ADMINISTRATOR . DIRECTORY_SEPARATOR . 'helpers' . DIRECTORY_SEPARATOR . 'csvh.php' );
	$csv_helper = csvHelper::getInstance (  );

	Дальше используем как обычный объект:
	echo $csv_helper -> hallo (  );

	
		Отладка
		
	ECHO "DEBUG: " . __FUNCTION__ . " $some_variable<br/>";
	
	Другие "волшебные константы": __LINE__, __FILE__, __DIR__ ... и другие
	
	echo "DEBUG: main";
	print_r ( $mainProducts );
	
	
		Сравнение мультибайтных строк

	Проверка на РВ. Функции для МБ используют extended regexp, то есть не нужно, в отличие от preg заключать шаблон в одинаковые симовлы
	Функции preg_match по смыслу соответствует mb_ereg, а не mb_ereg_match, как может показаться из названия
	
	
		Загрузка классов
		
	При сохранении в сессию объекта происходит его сериализация. При последующем извлечении (в новом скрипте) класс извлекаемого объекта должен быть загружен (require, include... ) до десериализации. Но если происходит старт сессии (session_start) то извлечение происходит автоматически, а старт сессии в фреймворке может произойти ранее начала работы нашего компонента.
	В таких случаях можно остановить сессию (session_write_close(), не черевато ли это чем-нибудь) выполнить  загрузку классов и снова запустить сессию
	Есть еще функция __autoload() и сопутствующие, но когда она срабатывает, не проверял
	
	
		Добавляем метаданные скрипты и стили на страницу (размещать, например, в виде)
		
	$doc = &JFactory::getDocument();
	/* Создает пустой метатег generator. Например, на тот случай, если вы хотите скрыть, что сайт сделан на Joomla. */
	$doc->setGenerator ( 'MyNiceGenerator' ); 
	/* Задает метатег description */
	$doc->setDescription ( 'Custom desc' ); 
	/* Задает тег title. Для админпанели работает как-то неуверенно */
	$doc->setTitle ( 'Custom title' ); 
	/* Создает пользовательский метатег */
	//http-equiv="content-type" content="text/html; charset=utf-8"
	$name = "content-type";
	$content = "text/html; charset=utf-8";
	$doc->setMetaData($name,$content); 
	/* привязывает файл таблицы стилей */
	// $doc->addStyleSheet('/path/to/file') 
	/* привязывает файл javascript или скрипта на каком-либо другом языке */
	// $doc->addScript('/path/to/file') 
	/* добавляет пользовательский тег. Можно использовать для вставки любого тега в секцию head. */
	// $doc->addCustomTag(); 
	/* Добавляет кусок кода javascript. Разместит код javascript и обрамит тегом <script>. Joomla размещает их после внедрения скриптов addScript(). */
	// $doc->addScriptDeclaration() 
	/* Добавляет кусок пользовательского стиля css. Внедряет css-стили и обрамляет их тегом <style>. Joomla разместит их после стилей addStyleSheet(). */
	// $doc->addStyleDeclaration()
	
	Как добавить мета вида <meta charset="utf-8"> ?